


Menu Dropdown listesi... (şifre, üyelik bilgileri , yemek, kategori, menu, çıkış)

image sayacı
upload images

menu and details

superadmin

ViewModels ve  VMClasses --> BLL'e taşı...



** İmage → 50. Veri Tabanının Güncellenmesi / 61. Profil Sayfasının Hazırlanması
** user food junction için food image sayacı
** 4:09 * 56. AutoMapper Ayarları --  yemekleri gösterirken kullanılacak
    public string? Food_Picture { get; set; } // - sonra command al -
    builder.Ignore(x => x.UserFoodJunctionID); // ignore etmezsek çalışır mı? çalışırsa diğer ikisine gerek var mı?

     **   public List<ImageofFoodDTO> ImageofFoodDTOs { get; set; } --> 56. AutoMapper Ayarları
  

** Session.Abandon()
** trim 
** create database if not exist 

** trim
** update'de null name durumunda  kontrol etmiyor ...
** update delete ve insert'lerde business codelar yerklerinde olmalı BLL'de ve de hata mesajlarını da barındırmaları gerekiyor / repository kontrol et
** isimlere standart getir...
** test yap ve kodlardan hangisi kaldı...
** update other client-side library in wwwroot (datatables, )


** qr code -- https://ironsoftware.com/csharp/barcode/blog/using-ironbarcode/how-to-generate-qr-code-in-csharp-windows-application/
** filter and son giriş zamanı 
** text area custimeze etmek (yapay zeka  ile )

 

Tablolara göre hareket et

ddlFoods.append($("<option></option>").val(index).html(foods));
jquery ekleme (wwwroot)...

// <select class="form-control" id="foodsofcategory" asp-for="_foodList_ID"> içindeki foreach gerek yok galiba 
// *** IsConfirmedAccount= ENTITIES.Enums.IsConfirmedAccount.Aktif --> seedroles.cs (DAL)




-----------------------------------------------------------------------------------


iş server name: NB-230301\\MSSQLSERVER22  ve ctz*9913
ev server name: ahmet_gokdemir ve LAPTOP-PEF0Q19Q  ve Ms....s..._3...2...
 
username: sa
password: / ctz*9913


Data Source=NB-230301\\MSSQLSERVER22 ---> sql kısmından farklı 1 tane yerine 2 tane \  

ahmet_gokdemir\MSSQLSERVER22 --> ahmet_gokdemir\\MSSQLSERVER22 Ms....s..._3...2...
-----------------------------------------------------------------------------------


mamage user secrets'i eklemeyi unutma (secret.json dosyasına) ----> FacebookOptions Facebook Google Microsoft
{
  "Authentication:Facebook:AppId": "588387496267633",
  "Authentication:Facebook:AppSecret": "73c40dd7d1e6b50927a369da27d83cf4",

  "Authentication:Google:ClientID": "882283884932-4rcl90b3m4lgqb6a9766dh1qp649sfkj.apps.googleusercontent.com",
  "Authentication:Google:ClientSecret": "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",

  "Authentication:Microsoft:ClientID": "588387496267633",
  "Authentication:Microsoft:ClientSecret": "73c40dd7d1e6b50927a369da27d83cf4"

}

-----------------------------------------------------------------------------------
migration yaptım ifnotexistdb yapmamışım


Existing/mevcut bir database'e yeni bir tablo veya tablo için property eklersek 
yapılması gereken önceki migration'lar yorum satırına alınmalı 
örneğin migration klasöründeki şu class'lar --> firstmigration ve add_blog_table.cs 'ler yorum satırına alınmalı...
BU ARADA add_blog_table.cs YORUMA ALINMADI!!!!


migration:	add-migration FirstMigration ,,,, PM> add-migration Menu_and_MenuDetail_Entities_added
			update-database

            add-migration Add-ImageofFood-class
            add-migration UserFoodJunctionID-Activated


            update-database Add-ImageofFood-Class
------------------------------------------

Sendgrid

Sendgrid_34239913






principalColumn: "Primary_ID",


Entitites:

Project References: yok.
NuGet Packages: Microsoft.AspNetCore.Identity, Microsoft.EntityFrameworkCore, Microsoft.Extensions.Identity.Stores


IdentityAPI kendisi, Identity sınıfları arasında navigationları kuruyor.. Ayrıyeten bir ilişki belirtmene gerekmiyor..
        //public virtual ICollection<AppUserRole> AppUserRoles { get; set; }
        //public virtual ICollection<AppRoleClaim> AppRoleClaims { get; set; } gibi...

Identity sınıfları sadece IEnitityden miras aldığı için property'leri implement edilmeli ve constructor tanımlanlamlı.. ama diğer sınıflar
(CategoryofFood,Food vs.) ayrıca Entity'den miras aldığı için ve Entity class da bu propertyleri implement ettiğinden bu sınıflarda ayrıyeten 
implementasyona gerek yok..

---
dipnot: 
        public IdentityRole(string roleName) : this()
        {
            Name = roleName;
        }
this IdentityRole sınıfının empty olan constructor'ını çağrır..
---

Model klasöründeki class'lar EntityBase dışında ayrıca IEntity'den miras alır zira MAP'da Base sınıfı IEntity'yi referans alır (EntityBase'den alırsa Identity'ler patlar) ve böylece tüm sınıflar (IEntity'den miras almasıyla) MAP edilebilir.. 

 

--- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---

MAP:

Project References: Entities.
NuGet Packages: Microsoft.AspNetCore.Identity.EntityFrameworkCore.., Microsoft.EntityFrameworkCore, Microsoft.EntityFrameworkCore.Proxies, 
Microsoft.EntityFrameworkCore.SqlServer, Microsoft.EntityFrameworkCore.Tools

virtual -- override ilişki..



--- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---

CreateAsync, UpdateAsync, ChangePasswordAsync, ResetPasswordAsync, AddLoginAsync, ConfirmEmailAsync --> dönüş tipleri IdentityResult'dir..

IsLockedOutAsync, IsEmailConfirmedAsync, CheckPasswordAsync --> dönüş tipleri bool

--- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---

Logout:
Program.cs

opts.LogoutPath = new PathString("/Member/LogOut"); //  asp-route-returnUrl="/Home/Index" tetiklenir..

--- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---

Program.cs

app.MapControllerRoute(
app.MapAreaControllerRoute(


--- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---

Adminde (Member, Home kısmından farklı olarak) RoleManager kullanıldı..

--- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---
Session kullanımı:

Program.cs --> 
builder.Services.AddSession();
app.UseSession();

CommonTools --> 
SessionExtension.cs added...

FoodController.cs -->
HttpContext.Session.SetObject("manipulatedData", pvm_post.FoodDTO);
result = HttpContext.Session.GetObject<FoodDTO>("manipulatedData");

--- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---

 min="0" => type="number"  => to avoid negative number...

 --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---

  colspan="2" --> DataTable.js'i çalıştırmıyor table kısmında
  <td colspan="2" style="padding-left:75px"><img style="width:75%; height:75%" src="@item.FoodPicture" /></td>

  --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---

  AppUser user = CurrentUser; çalışması için connectionString'e eklendi.. --> MultipleActiveResultSets=true;



--- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---

CategoryofFoodController

HttpContext.Session.SetObject("manipulatedData", cvm_post.CategoryofFoodDTO); // object to json
HttpContext.Session.SetObject("manipulatedData", null); // resetlemek


--- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---


FoodController.cs

_FoodLayout.cshtml --> Food_InPool_Ajax --> FoodListforOtherUsers --> Add_Food_toMyList_Ajax --> _CrudFood_InOtherUsersList_Partial (pop-up) --> CRUDFood_InOtherUsersList --> Control_IsExisted_InMyListBefore_Async
                                        --> FoodList_forMember


----------------------------------------- 0*********-----------------------------------------------

claimprovider --> claim'ler --> AddPolicy (Program.cs)

SessionExtension
CustomValidation

BaseController --> den türedi diğerleri
Areas --> admin kısmı
TagHelper --> property yakalamak..
ViewModel --> göstermek istediğim property'ler

VMClasses

---------------------------------------------------------
Program.cs'de 
custimize edilmiş validator

CookieBuilder -> api olmayacağı için jw token yerine
 
// create database if not exist
var app = builder.Build();

Mapster --> Adapt metodu...

DataTable
---------------------------------------------------------



