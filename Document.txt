
Identity.Stores --> Entities 
Design --> entites , web project
Proxies --> DAL, MAP
Tools --> DAL, MAP
Sql server --> Hepsi ama Entities hariç
Web.CodeGener --> Web Project
Configuration.ConfigurationManage --> BLL

ClaimProvider.cs --> .. devam --> ..net documanları ...
Users.cshtml --> event.target.value

İçerikler:

# Microsoft.AspNetCore.Identity:
# Javascript
# Enum 
# Tag Helper









Menu Dropdown listesi... (şifre, üyelik bilgileri , yemek, kategori, menu, çıkış)

** menu and details
** image sayacı
** upload images
** superadmin ekle
** ViewModels ve  VMClasses --> BLL'e taşı...



** İmage → 50. Veri Tabanının Güncellenmesi / 61. Profil Sayfasının Hazırlanması
** user food junction için food image sayacı
** 4:09 * 56. AutoMapper Ayarları --  yemekleri gösterirken kullanılacak
    public string? Food_Picture { get; set; } // - sonra command al -
    builder.Ignore(x => x.UserFoodJunctionID); // ignore etmezsek çalışır mı? çalışırsa diğer ikisine gerek var mı?

     **   public List<ImageofFoodDTO> ImageofFoodDTOs { get; set; } --> 56. AutoMapper Ayarları
  

** Session.Abandon()
** trim 
** create database if not exist 

** trim
** update'de null name durumunda  kontrol etmiyor ...
** update delete ve insert'lerde business codelar yerklerinde olmalı BLL'de ve de hata mesajlarını da barındırmaları gerekiyor / repository kontrol et
** isimlere standart getir...
** test yap ve kodlardan hangisi kaldı...
** update other client-side library in wwwroot (datatables, )


** qr code -- https://ironsoftware.com/csharp/barcode/blog/using-ironbarcode/how-to-generate-qr-code-in-csharp-windows-application/
** filter and son giriş zamanı 
** text area custimeze etmek (yapay zeka  ile )

 

Tablolara göre hareket et

ddlFoods.append($("<option></option>").val(index).html(foods));
jquery ekleme (wwwroot)...

// <select class="form-control" id="foodsofcategory" asp-for="_foodList_ID"> içindeki foreach gerek yok galiba 
// *** IsConfirmedAccount= ENTITIES.Enums.IsConfirmedAccount.Aktif --> seedroles.cs (DAL)




-----------------------------------------------------------------------------------


iş server name: NB-230301\\MSSQLSERVER22  ve ctz*9913
ev server name: ahmet_gokdemir ve LAPTOP-PEF0Q19Q  ve Ms....s..._3...2...
 
username: sa
password: / ctz*9913


Data Source=NB-230301\\MSSQLSERVER22 ---> sql kısmından farklı 1 tane yerine 2 tane \  

ahmet_gokdemir\MSSQLSERVER22 --> ahmet_gokdemir\\MSSQLSERVER22 Ms....s..._3...2...
-----------------------------------------------------------------------------------


mamage user secrets'i eklemeyi unutma (secret.json dosyasına) ----> FacebookOptions Facebook Google Microsoft
{
  "Authentication:Facebook:AppId": "588387496267633",
  "Authentication:Facebook:AppSecret": "73c40dd7d1e6b50927a369da27d83cf4",

  "Authentication:Google:ClientID": "882283884932-4rcl90b3m4lgqb6a9766dh1qp649sfkj.apps.googleusercontent.com",
  "Authentication:Google:ClientSecret": "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",

  "Authentication:Microsoft:ClientID": "588387496267633",
  "Authentication:Microsoft:ClientSecret": "73c40dd7d1e6b50927a369da27d83cf4"

}

-----------------------------------------------------------------------------------
migration yaptım ifnotexistdb yapmamışım


Existing/mevcut bir database'e yeni bir tablo veya tablo için property eklersek 
yapılması gereken önceki migration'lar yorum satırına alınmalı 
örneğin migration klasöründeki şu class'lar --> firstmigration ve add_blog_table.cs 'ler yorum satırına alınmalı...
BU ARADA add_blog_table.cs YORUMA ALINMADI!!!!


migration:	add-migration FirstMigration ,,,, PM> add-migration Menu_and_MenuDetail_Entities_added
			update-database

            add-migration Add-ImageofFood-class
            add-migration UserFoodJunctionID-Activated
            add-migration Update-MenuClass-MenuMAP

            update-database

            update-database Add-ImageofFood-Class --> GERİ ALMAK İÇİN


            add-migration Relation-with-MenuDetail-and-UserFoodJunction-Instead-FoodClass


            Instead 

------------------------------------------

Sendgrid

Sendgrid_34239913






principalColumn: "Primary_ID",


Entitites:

Project References: yok.
NuGet Packages: Microsoft.AspNetCore.Identity, Microsoft.EntityFrameworkCore, Microsoft.Extensions.Identity.Stores


IdentityAPI kendisi, Identity sınıfları arasında navigationları kuruyor.. Ayrıyeten bir ilişki belirtmene gerekmiyor..
        //public virtual ICollection<AppUserRole> AppUserRoles { get; set; }
        //public virtual ICollection<AppRoleClaim> AppRoleClaims { get; set; } gibi...

Identity sınıfları sadece IEnitityden miras aldığı için property'leri implement edilmeli ve constructor tanımlanlamlı.. ama diğer sınıflar
(CategoryofFood,Food vs.) ayrıca Entity'den miras aldığı için ve Entity class da bu propertyleri implement ettiğinden bu sınıflarda ayrıyeten 
implementasyona gerek yok..

---
dipnot: 
        public IdentityRole(string roleName) : this()
        {
            Name = roleName;
        }
this IdentityRole sınıfının empty olan constructor'ını çağrır..
---

Model klasöründeki class'lar EntityBase dışında ayrıca IEntity'den miras alır zira MAP'da Base sınıfı IEntity'yi referans alır (EntityBase'den alırsa Identity'ler patlar) ve böylece tüm sınıflar (IEntity'den miras almasıyla) MAP edilebilir.. 

 

--- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---

MAP:

Project References: Entities.
NuGet Packages: Microsoft.AspNetCore.Identity.EntityFrameworkCore.., Microsoft.EntityFrameworkCore, Microsoft.EntityFrameworkCore.Proxies, 
Microsoft.EntityFrameworkCore.SqlServer, Microsoft.EntityFrameworkCore.Tools

virtual -- override ilişki..



--- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---

# Microsoft.AspNetCore.Identity:

Users.cshtml'da -->
** Html'de UserManager<AppUser> kullanmak...



CreateAsync, UpdateAsync, ChangePasswordAsync, ResetPasswordAsync, AddLoginAsync, ConfirmEmailAsync --> dönüş tipleri IdentityResult'dir..

IsLockedOutAsync, IsEmailConfirmedAsync, CheckPasswordAsync --> dönüş tipleri bool

--- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---

Logout:
Program.cs

opts.LogoutPath = new PathString("/Member/LogOut"); //  asp-route-returnUrl="/Home/Index" tetiklenir..

--- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---

Program.cs

app.MapControllerRoute(
app.MapAreaControllerRoute(


--- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---

Adminde (Member, Home kısmından farklı olarak) RoleManager kullanıldı..

--- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---
Session kullanımı:

Program.cs --> 
builder.Services.AddSession();
app.UseSession();

CommonTools --> 
SessionExtension.cs added...

FoodController.cs -->
HttpContext.Session.SetObject("manipulatedData", pvm_post.FoodDTO);
result = HttpContext.Session.GetObject<FoodDTO>("manipulatedData");

--- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---

 min="0" => type="number"  => to avoid negative number...

 --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---

  colspan="2" --> DataTable.js'i çalıştırmıyor table kısmında
  <td colspan="2" style="padding-left:75px"><img style="width:75%; height:75%" src="@item.FoodPicture" /></td>

  --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---

  AppUser user = CurrentUser; çalışması için connectionString'e eklendi.. --> MultipleActiveResultSets=true;



--- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---

CategoryofFoodController

HttpContext.Session.SetObject("manipulatedData", cvm_post.CategoryofFoodDTO); // object to json
HttpContext.Session.SetObject("manipulatedData", null); // resetlemek


--- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---


FoodController.cs

_FoodLayout.cshtml --> Food_InPool_Ajax --> FoodListforOtherUsers --> Add_Food_toMyList_Ajax --> _CrudFood_InOtherUsersList_Partial (pop-up) --> CRUDFood_InOtherUsersList --> Control_IsExisted_InMyListBefore_Async
                                        --> FoodList_forMember


----------------------------------------- 0*********-----------------------------------------------

claimprovider --> claim'ler --> AddPolicy (Program.cs)

SessionExtension
CustomValidation

BaseController --> den türedi diğerleri
Areas --> admin kısmı


badge bg-warning çalıştı...

ViewModel --> göstermek istediğim property'ler

VMClasses

---------------------------------------------------------
Program.cs'de 
custimize edilmiş validator

CookieBuilder -> api olmayacağı için jw token yerine
 
// create database if not exist
var app = builder.Build();

Mapster --> Adapt metodu...

DataTable
---------------------------------------------------------

AppUser.Id --> GUID (Identity'den gelen)
AppUser.ID --> short

_iufjm.Get_ByAll_exceptUserID_Async(CurrentUser.Id); // IdentityUser'dan gelen Id (Guid tipli)

   
   AccessibleID: kullanılmasının sebebi

    // builder.HasKey(x => new { x.AppUser.Id, x.CategoryofFoodID });
    // ... is not a valid member access expression. The expression should represent a simple property or field acces HATASI VERİYOR


Kullanici_ID --> AccessibleID AccessibleID


The ALTER TABLE statement conflicted with the FOREIGN KEY constraint "FK_Yemek_Resimleri_Kullanici_Yemek_Detayi_Kullanici_Yemek_ID". The conflict occurred in database "TechnosoftProjectDB", table "dbo.Kullanici_Yemek_Detayi", column 'ID'.


FK_Yemek_Resimleri veriler silinmeli zira  dbo.Kullanici_Yemek_Detayi daha eklenmedi.
eklenmesi için oradaki datalar silinmeli yoksa FK_Yemek_Resimleri içerisndeki Kullanici_Yemek_ID'i
bulamıyor zira bu (Kullanici_Yemek_ID) dbo.Kullanici_Yemek_Detayi tablosuna ait ve bu daha eklenmedi.



# Javascript

querySelectorAll --> var allselects = document.querySelectorAll('select');
addEventListener --> allselects[i].addEventListener('change', changeFunc);

event.target --> data: { member_ID: event.target.id, activation_Status: event.target.value }


# Enum                     

** user.IsConfirmedAccount = (IsConfirmedAccount)1; --> type of int to type of IsConfirmedAccount


# Tag Helper

** TagHelper --> property yakalamak..

<select class="form-control" id="@user.Id" value="@user.ID" asp-for="@user.IsConfirmedAccount">

    <!-- Project.ENTITIES.Enums.IsConfirmedAccount>() yerine SelectListItem -->
    @foreach (SelectListItem item in Html.GetEnumSelectList<Project.ENTITIES.Enums.IsConfirmedAccount>())
    {
        // data: { id: $(this).attr("data-id") }, // this, value=formaintenance'ı (button) temsil eder..
        // <button id="unnecessary" class="btn btn-danger" data-id=@item.ID value="formaintenance">Bakıma Al</button>

        <option id="@user.Id">@item.Text</option>
    }
</select>

- asp-for="@user.IsConfirmedAccount" --> ilgili user için database'de IsConfirmedAccount ne olarak kayıtlı ise o seçili gelir  ...
- id="@user.Id" --> post işlemi ile bu veri gider.
- value="@user.ID" --> gerek yok
- option id="@user.Id" --> id="@user.Id" gerek yok  


2.yol (select'lerde özellikler default value girmek için --> option value="0" selected gibi...)

<select class="form-select" asp-for="UserFoodJunctionDTO.Food_Status">
    <option value="0" selected>Yemek Durumunu seçiniz.</option>
    @foreach (SelectListItem es in Html.GetEnumSelectList<Project.ENTITIES.Enums.ExistentStatus>())
    {
        <option value="@es.Value">@es.Text</option>

    }
</select>

-- value="0" --> bunu kullanabilmek için ilk örnekteki select içindeki id="@user.Id" yerine option içindeki value="@es.Value" kulllanılıd

