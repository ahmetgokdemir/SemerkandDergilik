principalColumn: "Primary_ID",


Entitites:

Project References: yok.
NuGet Packages: Microsoft.AspNetCore.Identity, Microsoft.EntityFrameworkCore, Microsoft.Extensions.Identity.Stores


IdentityAPI kendisi, Identity sýnýflarý arasýnda navigationlarý kuruyor.. Ayrýyeten bir iliþki belirtmene gerekmiyor..
        //public virtual ICollection<AppUserRole> AppUserRoles { get; set; }
        //public virtual ICollection<AppRoleClaim> AppRoleClaims { get; set; } gibi...

Identity sýnýflarý sadece IEnitityden miras aldýðý için property'leri implement edilmeli ve constructor tanýmlanlamlý.. ama diðer sýnýflar
(Category,Product vs.) ayrýca Entity'den miras aldýðý için ve Entity class da bu propertyleri implement ettiðinden bu sýnýflarda ayrýyeten 
implementasyona gerek yok..

---
dipnot: 
        public IdentityRole(string roleName) : this()
        {
            Name = roleName;
        }
this IdentityRole sýnýfýnýn empty olan constructor'ýný çaðrýr..
---

Model klasöründeki class'lar EntityBase dýþýnda ayrýca IEntity'den miras alýr zira MAP'da Base sýnýfý IEntity'yi referans alýr (EntityBase'den alýrsa Identity'ler patlar) ve böylece tüm sýnýflar (IEntity'den miras almasýyla) MAP edilebilir.. 

 

--- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---

MAP:

Project References: Entities.
NuGet Packages: Microsoft.AspNetCore.Identity.EntityFrameworkCore.., Microsoft.EntityFrameworkCore, Microsoft.EntityFrameworkCore.Proxies, 
Microsoft.EntityFrameworkCore.SqlServer, Microsoft.EntityFrameworkCore.Tools

virtual -- override iliþki..



--- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---

CreateAsync, UpdateAsync, ChangePasswordAsync, ResetPasswordAsync, AddLoginAsync, ConfirmEmailAsync --> dönüþ tipleri IdentityResult'dir..

IsLockedOutAsync, IsEmailConfirmedAsync, CheckPasswordAsync --> dönüþ tipleri bool

--- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---

Logout:
Program.cs

opts.LogoutPath = new PathString("/Member/LogOut"); //  asp-route-returnUrl="/Home/Index" tetiklenir..

--- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---

Program.cs

app.MapControllerRoute(
app.MapAreaControllerRoute(


--- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---

Adminde (Member, Home kýsmýndan farklý olarak) RoleManager kullanýldý..

--- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---
Session kullanýmý:

Program.cs --> 
builder.Services.AddSession();
app.UseSession();

CommonTools --> 
SessionExtension.cs added...

ProductController.cs -->
HttpContext.Session.SetObject("manipulatedData", pvm_post.ProductDTO);
result = HttpContext.Session.GetObject<ProductDTO>("manipulatedData");

--- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---

 min="0" => type="number"  => to avoid negative number...

 --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---

  colspan="2" --> DataTable.js'i çalýþtýrmýyor table kýsmýnda
  <td colspan="2" style="padding-left:75px"><img style="width:75%; height:75%" src="@item.ProductPicture" /></td>

  --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---

  AppUser user = CurrentUser; çalýþmasý için connectionString'e eklendi.. --> MultipleActiveResultSets=true;



