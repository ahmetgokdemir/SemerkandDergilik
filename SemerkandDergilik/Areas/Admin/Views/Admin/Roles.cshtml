@model List<RoleViewModel> // List<AppRole>

@{
    ViewData["Title"] = "Roles";
    Layout = "~/Areas/Admin/Views/Admin/_AdminLayout.cshtml";
}

<h3>Roller</h3>
<hr />

<table class="table table-hover table-bordered table-striped">
    <tr>
        <th>Id</th>
        <th>Rol ismi</th>
        <th>Silme</th>
        <th>Güncelleme</th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>

            <td>@item.Id</td>
            <td>@item.Name</td>
                <td><a class="btn btn-warning" asp-action="RoleUpdate" asp-route-id="@item.Id">Güncelle</a></td>
            <td>
                    <form asp-action="RoleDelete" asp-route-id="@item.Id" method="post">
                    @*Delete işleminde direkt post metodu çalışacağından form(submit) içine alındı, update de ise önce get metod çalışacak o yüzden update klasik şekilde yazıldı.... a tag helper bu işlemi yapamazdı o yüzden form/button kullanıldı. Çünkü a taghelper get metodunu çalıştırabilir.. post metodu değil.... burada da olduğu gibi mvc ve mvc core'da birden fazla form tanımlanabilir..

                    form action içerisinde asp-route-id="@item.Id" YERİNE input hidden denedim olmadı!!!

                    <input type="hidden" asp-for="@item.Id" /> OLMADI!!!

                    *@
 
                    <button class="btn btn-danger" type="submit">Sil</button>
                </form>
            </td>
            
        </tr>

    }
</table>

<a asp-action="RoleCreate" class="btn btn-info">Role Oluştur</a>